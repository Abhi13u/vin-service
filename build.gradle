plugins {
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'org.sonarqube' version '6.2.0.5505'
}

group = 'com.innocito'
version = '0.0.1-SNAPSHOT'

repositories {
    apply plugin: 'java'
    compileJava {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.projectlombok:lombok:1.18.32'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.testcontainers:testcontainers:1.21.0'
}

configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}


jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = file("${rootProject}/build/reports")
}

tasks.named('test'){
    useJUnitPlatform()
}

jacocoTestReport {
    description = "Generate Jacoco coverage reports"
    reports {
        xml.required.set(true)
        xml.destination file("${layout.buildDirectory.get()}/reports/jacoco.xml")
        csv.required.set(false)
        html.destination file("${layout.buildDirectory.get()}/reports/coverage")
    }
    dependsOn test
    sourceSets sourceSets.main
    afterEvaluate{
        classDirectories = files(classDirectories.files.collect{
            fileTree(dir: it,
                    excludes: [
                            "com/innocito/VinServiceApplication.class",
                    ])
        })
    }
}

test.finalizedBy jacocoTestReport

project.tasks['sonarqube'].dependsOn test

checkstyle {
    toolVersion = '10.25.0'
    configFile = file("${rootDir}/src/main/resources/checkstyle/checkstyle.xml")
}

check.dependsOn checkstyleMain


